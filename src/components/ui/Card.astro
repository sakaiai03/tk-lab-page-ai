---
export interface Props {
  href?: string;
  variant?: 'default' | 'feature' | 'member' | 'blog' | 'research' | 'author';
  size?: 'sm' | 'md' | 'lg' | 'xl';
  hover?: boolean;
  class?: string;
}

const {
  href,
  variant = 'default',
  size = 'md',
  hover = true,
  class: className = '',
} = Astro.props;

// バリアントに応じたスタイル定義
const variantStyles = {
  default: 'bg-white shadow-tklab-sm border-tklab-secondary-200',
  feature: 'bg-tklab-secondary-50 shadow-tklab-sm',
  member: 'bg-base-300 shadow-xl',
  blog: 'bg-white shadow-tklab-sm',
  research: 'bg-tklab-secondary-100 shadow-tklab-md',
  author: 'bg-white border border-gray-600',
};

// サイズに応じたスタイル定義
const sizeStyles = {
  sm: 'p-4',
  md: 'p-6',
  lg: 'p-8',
  xl: 'p-10',
};

// ホバーエフェクト
const hoverStyles = hover
  ? variant === 'member'
    ? 'hover:scale-105 duration-200'
    : variant === 'default' || variant === 'blog'
      ? 'hover:shadow-tklab-md'
      : variant === 'feature'
        ? 'hover:shadow-tklab-md'
        : variant === 'research'
          ? 'hover:shadow-tklab-lg'
          : 'hover:shadow-xl'
  : '';

// 基本スタイル
const baseStyles = 'rounded-lg transition-all duration-200';

// 最終的なクラス名
const cardClasses =
  `${baseStyles} ${variantStyles[variant]} ${sizeStyles[size]} ${hoverStyles} ${className}`.trim();
---

{
  href ? (
    <a href={href} class="block">
      <div class={cardClasses}>
        <slot />
      </div>
    </a>
  ) : (
    <div class={cardClasses}>
      <slot />
    </div>
  )
}
