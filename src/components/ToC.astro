---
interface link {
  depth: number;
  text: string;
  slug: string;
}
export interface props {
  links: link[];
}
const { links } = Astro.props;
---

<!-- 変数を用いて定義するml-⚪︎⚪︎をあらかじめ呼び出してあげることで反映されるようになる。 -->
<div hidden class="ml-12 ml-16 ml-20 ml-24 ml-28"></div>
<div class="block">
  {
    // links を展開する関数
    (function (links: link[]) {
      // links が空の場合は No links と表示する
      if (links.length === 0) {
        return <li class="text-gray-500">No links</li>;
      }

      // 1から始まる番号のカウンタ
      let counter = 1;

      // html には、htmlベタ書きの結果を格納する
      let html = '';
      for (let i = 0; i < links.length; i++) {
        const link = links[i];
        let { depth, text, slug } = link;

        // 「」の内側の文字列を取得
        const match = text.match(/「(.*?)」/);
        const displayText = match ? match[1] : slug; // 見つかったらその部分、なければslugを使用

        html += '<div class="text-gray-500 w-full hover:bg-gray-100">';
        html += '<a class="flex items-center" href="#' + slug + '">';

        if (depth === 1) {
          html += `<span class="text-white bg-blue-500 rounded-full px-4 inline-flex items-center justify-center h-8 w-8 mr-4">${counter}</span>`;
          html += '<p class="py-[6px] text-lg font-semibold">';
          counter++;
        } else {
          // 見出しの＃の数に応じてインデントする。
          html += `<p class="py-[4px] text-base ml-${(depth + 1) * 4}">`;
        }

        html += displayText + '</p></a>';
        html += '</div>';
      }
      return <div set:html={html} />;
    })(links)
  }
</div>
