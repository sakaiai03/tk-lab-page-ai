---
// images
import { getCollection } from 'astro:content';
import BlogPostCard from '@components/BlogPostCard.astro';
import Layout from '@layouts/Layout.astro';

// 現在の日付を取得
const currentDate = new Date();

// 未来の日付の投稿を除外し、時系列順に並べる
const blog_posts = (await getCollection('blog'))
  .filter((post) => new Date(post.data.date) <= currentDate) // 未来の日付を除外
  .sort((a, b) => Date.parse(b.data.date) - Date.parse(a.data.date));
---

<Layout title="全投稿一覧">
  <div class="container mx-auto">
    <h1 class="my-12 text-center text-3xl font-bold">全投稿</h1>

    <!-- フィルター機能 -->
    <div class="my-12 flex w-full flex-row-reverse">
      <details class="dropdown dropdown-end">
        <summary class="btn m-1 bg-primary-content">記事を絞り込む</summary>
        <ul
          class="menu dropdown-content z-[1] w-52 rounded-box bg-primary-content p-2 shadow filter"
        >
          <!-- show all at first -->
          <li data-filter="all" class="btn btn-success">すべて</li>
          <li data-filter="blog" class="btn btn-ghost">ブログ</li>
          <li data-filter="news" class="btn btn-ghost">ニュース</li>
          <li data-filter="tips" class="btn btn-ghost">ノウハウ</li>
        </ul>
      </details>
    </div>
    <!-- フィルター機能 end -->

    <!-- フィルタした投稿を表示 -->
    <div class="-m-4 flex flex-wrap">
      {
        blog_posts.map((post) => (
          // wrapper for filter
          <div class="w-full p-4 md:w-1/2 lg:w-1/3" data-tag={post.data.tag}>
            <BlogPostCard post={post} />
          </div>
        ))
      }
    </div>
    <!-- フィルタした投稿を表示 end -->
  </div>
</Layout>

<!-- フィルター機能: javascript -->
<script is:inline>
  const filterButtons = document.querySelectorAll('[data-filter]');
  const posts = document.querySelectorAll('[data-tag]');

  // events when filter button clicked
  filterButtons.forEach((button) => {
    button.addEventListener('click', buttonClicked);
    button.addEventListener('click', tagFilter);
  });

  // change active filter button
  function buttonClicked() {
    filterButtons.forEach((button) => {
      // make all buttons inactive
      button.classList.remove('btn-success');
      button.classList.add('btn-ghost');
      // make clicked button active
      this.classList.add('btn-success');
      this.classList.remove('btn-ghost');
    });
  }

  // posts filter function
  // hide posts that don't match the tag
  function tagFilter() {
    const tag = this.dataset.filter;
    posts.forEach((post) => {
      if (tag === 'all') {
        post.classList.remove('hidden');
      } else if (post.dataset.tag.includes(tag)) {
        post.classList.remove('hidden');
      } else {
        post.classList.add('hidden');
      }
    });
  }
</script>
